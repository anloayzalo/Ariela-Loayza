
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Timer;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;


public class FrmAsteroids extends javax.swing.JFrame {

    int coordX;
    int coordX2=-640;
    Timer temporizador;
    Asteroids nave = new Asteroids (400,300,0,0,0);
    
    public FrmAsteroids() {
        
        initComponents();        
    }

    
    public void paint(Graphics g)
    {
        BufferedImage imgNebula=null;
        BufferedImage imgDebris=null;
        BufferedImage imgAsteroid=null;
        BufferedImage imgShip=null;
        BufferedImage imgShot=null;
        BufferedImage imgExplosion=null;
        
              
        try {
            imgNebula = ImageIO.read(new File("C:/Asteroids/nebula_blue.png"));
            imgDebris = ImageIO.read(new File("C:/Asteroids/debris2_blue.png"));
            imgShip = ImageIO.read(new File("C:/Asteroids/nave1.png"));
            //imgNebula = ImageIO.read(new File(this.getClass().getResource("c:/nebula_blue.png")));
        } catch (IOException ex) {
            Logger.getLogger(FrmAsteroids.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //super.paint(g);
        g.drawImage(imgNebula, 0,0,800,600, this);//sin llama
        g.drawImage(imgDebris, coordX,100,640,480, this);//sin llama
        g.drawImage(imgDebris, coordX2,100,640,480, this);//sin llama
        

        
        this.temporizador = new Timer(50, new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                coordX+=3;
                coordX2+=3;
                
                if (coordX>600)
                {
                    coordX=-640;
                }
                if (coordX2>600)
                {
                    coordX2=-640;
                }
                
                nave.setAngulo(nave.getAngulo()+10);
                
                repaint();
            }
        
        });
        

 
// Rotation information

        double rotationRequired = Math.toRadians(nave.getAngulo()); //Recoge un valor en Ã¡ngulos y pasa a radianes
        double locationX = imgShip.getWidth() / 2;
        double locationY = imgShip.getHeight() / 2;
        AffineTransform tx = AffineTransform.getRotateInstance(rotationRequired, locationX, locationY);
        AffineTransformOp op = new AffineTransformOp(tx, AffineTransformOp.TYPE_BILINEAR);
        Graphics2D g2=(Graphics2D) g; //convertir graphics 2d en g2
        // Drawing the rotated image at the required drawing locations
        g2.drawImage(op.filter(imgShip, null), (int)nave.getDrawLocationX(), (int)nave.getDrawLocationY(), null);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        temporizador.start();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAsteroids.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAsteroids.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAsteroids.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAsteroids.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAsteroids().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
